"""recreate db because of broken migrations

Revision ID: f8800c4cdd6c
Revises: 
Create Date: 2022-02-17 17:17:01.314503

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f8800c4cdd6c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('menu_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_category', sa.String(length=20), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('path', sa.Unicode(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_category'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=25), nullable=True),
    sa.Column('sex', sa.String(length=7), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone_number', sa.String(length=10), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_phone_number'), ['phone_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_registration_date'), ['registration_date'], unique=False)

    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(length=128), nullable=True),
    sa.Column('house', sa.String(length=10), nullable=True),
    sa.Column('building', sa.String(length=50), nullable=True),
    sa.Column('entrance', sa.String(length=3), nullable=True),
    sa.Column('floor', sa.String(length=3), nullable=True),
    sa.Column('apartment', sa.String(length=5), nullable=True),
    sa.Column('additional_info', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_food', sa.String(length=50), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.Column('measure', sa.String(length=2), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('path', sa.Unicode(length=128), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['menu_category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_food'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=25), nullable=True),
    sa.Column('phone_number', sa.String(length=10), nullable=True),
    sa.Column('address', sa.String(length=512), nullable=True),
    sa.Column('start_order', sa.DateTime(), nullable=True),
    sa.Column('delivery_datetime', sa.DateTime(), nullable=True),
    sa.Column('payment_method', sa.String(length=20), nullable=True),
    sa.Column('total_price', sa.Integer(), nullable=True),
    sa.Column('persons', sa.Integer(), nullable=True),
    sa.Column('order_notes', sa.String(length=256), nullable=True),
    sa.Column('end_order', sa.DateTime(), nullable=True),
    sa.Column('order_status', sa.String(length=25), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_order_delivery_datetime'), ['delivery_datetime'], unique=False)
        batch_op.create_index(batch_op.f('ix_order_end_order'), ['end_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_order_phone_number'), ['phone_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_order_start_order'), ['start_order'], unique=False)

    op.create_table('order_food',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('food_quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['food.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('order_id', 'food_id')
    )
    op.create_table('user_food',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['food_id'], ['food.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'food_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_food')
    op.drop_table('order_food')
    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_order_start_order'))
        batch_op.drop_index(batch_op.f('ix_order_phone_number'))
        batch_op.drop_index(batch_op.f('ix_order_end_order'))
        batch_op.drop_index(batch_op.f('ix_order_delivery_datetime'))

    op.drop_table('order')
    op.drop_table('food')
    op.drop_table('address')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_registration_date'))
        batch_op.drop_index(batch_op.f('ix_user_phone_number'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('menu_category')
    # ### end Alembic commands ###
